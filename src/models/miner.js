const Transaction = require('./transaction');

const { MINING_REWARD, REWARD_TX } = require('../../config/network-parameters');

/**
 * Miner class
 * @example <caption>Create a new miner object</caption>
 * let blockchain = new Chain();
 * let wsServer = new wsServer(...params);
 * let miner = new Miner(blockchain, wsServer);
 */
class Miner {
    /**
     * Miner constructor
     * @param {object} blockchain - Blockchain class object.
     * @param {object} wsServer - Websocket class object.
     */
    constructor(blockchain, wsServer) {
        this.blockchain = blockchain;
        this.wsServer = wsServer;
    }

    /**
     * Method to mine new block in blockchain.
     * Uses Websocket to synchronize chains and to clear pending transactions list.
     * @param {string} minerAddress - Public key in hex string generated by elliptic (secp256k1) library
     * @returns Block class object
     */
    mine(minerAddress) {
        const coinbaseTransaction = new Transaction(REWARD_TX, minerAddress, MINING_REWARD, 0);

        this.blockchain.pendingTransactions.unshift(coinbaseTransaction);

        const newBlock = this.blockchain.addBlock();

        this.wsServer.synchronizeChains();

        return newBlock;
    }
}

module.exports = Miner;
